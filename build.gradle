buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = 'http://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = ttsVersion
group = ttsGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = ttsBaseName

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven {
        name = 'curseforge'
        url = 'https://minecraft.curseforge.com/api/maven/'
    }
    maven {
        url = "https://mod-buildcraft.com/maven/"
    }
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    runtimeOnly "jei:jei_1.12.2:4.15.0.268"
    compile('org.spongepowered:mixin:0.8') {
        exclude module: 'launchwrapper'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
    }
    compile files("../galacticraft/Galacticraft-Planets-Dev-1.12.2-4.0.2.261.jar", "../galacticraft/GalacticraftCore-Dev-1.12.2-4.0.2.261.jar", "../galacticraft/MicdoodleCore-Dev-1.12.2-4.0.2.261.jar")

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}



sourceSets {
    main {
        //ext.refMap = 'mixins.MODID.refmap.json'
    }
}

/*task cleanBuild(type: Delete) {
    delete "$buildDir"
}

task copyResources(type: Copy) {
    from "$buildDir/resources/main"
    into "$buildDir/classes/java/main"
}

task deleteOrigResources(type: Delete) {
    delete "$buildDir/resources/main"
}*/