plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
}

version = mod_version
group = mod_group

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'

    reobf = true
    copyIdeResources = true
    accessTransformer "src/main/resources/debug_at.cfg"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'fml.coreMods.load', 'zone.rong.mixinbooter.MixinBooterPlugin,micdoodle8.mods.miccore.MicdoodlePlugin,io.codetoil.tothestars.asm.TTSCoremod'
            property 'fml.debugAccessTransformer', 'true'
            property 'forge.logging.console.level', 'debug'
            mods {
                tothestars {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'fml.coreMods.load', 'zone.rong.mixinbooter.MixinBooterPlugin,micdoodle8.mods.miccore.MicdoodlePlugin,io.codetoil.tothestars.asm.TTSCoremod'
            property 'fml.debugAccessTransformer', 'true'
            property 'forge.logging.console.level', 'debug'
            mods {
                tothestars {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://maven.galacticraft.net/repository/legacy/' }
    maven { url = 'https://files.minecraftforge.net' }
    maven { url = 'https://maven.minecraftforge.net' }
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = 'https://modmaven.dev' }
    maven { url "https://maven.cleanroommc.com" }
    mavenCentral()
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"

    implementation fg.deobf("zone.rong:mixinbooter:7.1")
    implementation fg.deobf('dev.galacticraft:galacticraft-legacy:4.0.6')
    runtimeOnly fg.deobf('mezz.jei:jei_1.12.2:4.16.1.1012')
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mod_version: mod_version
    ]
    inputs.properties replaceProperties

    filesMatching(['mcmod.info']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'        : mod_id,
                'Specification-Vendor'       : "Codetoil",
                'Specification-Version'      : '1', // We are version 1 of ourselves
                'Implementation-Title'       : project.name,
                'Implementation-Version'     : project.jar.archiveVersion,
                'Implementation-Vendor'      : "Codetoil",
                "FMLCorePlugin"              : "io.codetoil.tothestars.asm.TTSCoremod",
                "FMLCorePluginContainsFMLMod": true
        ])
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Codetoil/tothestars")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

eclipse {
    // Run everytime eclipse builds the code
    //autoBuildTasks genEclipseRuns
    // Run when importing the project
    synchronizationTasks 'genEclipseRuns'
}

// Merge the resources and classes into the same directory.
// This is done because java expects modules to be in a single directory.
// And if we have it in multiple we have to do performance intensive hacks like having the UnionFileSystem
// This will eventually be migrated to ForgeGradle so modders don't need to manually do it. But that is later.
sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

clean {
    def filteredDelete = new HashSet<>()
    for (def toDelete : getDelete()) {
        for (def f : file(toDelete).listFiles()) {
            if (f.getName() != "fg_cache") {
                filteredDelete.add(f)
            }
        }
    }
    setDelete(filteredDelete)
}

